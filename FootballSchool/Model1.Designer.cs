//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("fscModel", "FK_Teams_Coaches", "Coaches", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Coaches), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.Teams), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_GameEvents_Event", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Events), "GameEvents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.GameEvents), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_GameEvents_Game", "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Games), "GameEvents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.GameEvents), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_GameEvents_Players", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Players), "GameEvents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.GameEvents), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_Games_Referee", "Referee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Referee), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.Games), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_Games_Team1", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Teams), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.Games), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_Games_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Teams), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.Games), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_PlayerInTeam_Players", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Players), "PlayerInTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.PlayerInTeam), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_PlayerInTeam_Team", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.Teams), "PlayerInTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.PlayerInTeam), true)]
[assembly: EdmRelationshipAttribute("fscModel", "FK_Players_PlayerPositions", "PlayerPositions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FootballSchool.PlayerPositions), "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FootballSchool.Players), true)]

#endregion

namespace FootballSchool
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class fscEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new fscEntities object using the connection string found in the 'fscEntities' section of the application configuration file.
        /// </summary>
        public fscEntities() : base("name=fscEntities", "fscEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new fscEntities object.
        /// </summary>
        public fscEntities(string connectionString) : base(connectionString, "fscEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new fscEntities object.
        /// </summary>
        public fscEntities(EntityConnection connection) : base(connection, "fscEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coaches> Coaches
        {
            get
            {
                if ((_Coaches == null))
                {
                    _Coaches = base.CreateObjectSet<Coaches>("Coaches");
                }
                return _Coaches;
            }
        }
        private ObjectSet<Coaches> _Coaches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Events> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Events>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Events> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameEvents> GameEvents
        {
            get
            {
                if ((_GameEvents == null))
                {
                    _GameEvents = base.CreateObjectSet<GameEvents>("GameEvents");
                }
                return _GameEvents;
            }
        }
        private ObjectSet<GameEvents> _GameEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Games> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Games>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Games> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerInTeam> PlayerInTeam
        {
            get
            {
                if ((_PlayerInTeam == null))
                {
                    _PlayerInTeam = base.CreateObjectSet<PlayerInTeam>("PlayerInTeam");
                }
                return _PlayerInTeam;
            }
        }
        private ObjectSet<PlayerInTeam> _PlayerInTeam;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerPositions> PlayerPositions
        {
            get
            {
                if ((_PlayerPositions == null))
                {
                    _PlayerPositions = base.CreateObjectSet<PlayerPositions>("PlayerPositions");
                }
                return _PlayerPositions;
            }
        }
        private ObjectSet<PlayerPositions> _PlayerPositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Players> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Players>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Players> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Referee> Referee
        {
            get
            {
                if ((_Referee == null))
                {
                    _Referee = base.CreateObjectSet<Referee>("Referee");
                }
                return _Referee;
            }
        }
        private ObjectSet<Referee> _Referee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Teams> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Teams>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Teams> _Teams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coaches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoaches(Coaches coaches)
        {
            base.AddObject("Coaches", coaches);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Events events)
        {
            base.AddObject("Events", events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameEvents(GameEvents gameEvents)
        {
            base.AddObject("GameEvents", gameEvents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Games games)
        {
            base.AddObject("Games", games);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerInTeam EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerInTeam(PlayerInTeam playerInTeam)
        {
            base.AddObject("PlayerInTeam", playerInTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerPositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerPositions(PlayerPositions playerPositions)
        {
            base.AddObject("PlayerPositions", playerPositions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Players players)
        {
            base.AddObject("Players", players);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Referee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReferee(Referee referee)
        {
            base.AddObject("Referee", referee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Teams teams)
        {
            base.AddObject("Teams", teams);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="Coaches")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coaches : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coaches object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Coaches CreateCoaches(global::System.Int32 id, global::System.String lastName, global::System.String name)
        {
            Coaches coaches = new Coaches();
            coaches.Id = id;
            coaches.LastName = lastName;
            coaches.Name = name;
            return coaches;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Teams_Coaches", "Teams")]
        public EntityCollection<Teams> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Teams>("fscModel.FK_Teams_Coaches", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Teams>("fscModel.FK_Teams_Coaches", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Events object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Events CreateEvents(global::System.Int32 id, global::System.String type)
        {
            Events events = new Events();
            events.Id = id;
            events.Type = type;
            return events;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_GameEvents_Event", "GameEvents")]
        public EntityCollection<GameEvents> GameEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameEvents>("fscModel.FK_GameEvents_Event", "GameEvents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameEvents>("fscModel.FK_GameEvents_Event", "GameEvents", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="GameEvents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameEvents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameEvents object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="gameID">Initial value of the GameID property.</param>
        /// <param name="playerID">Initial value of the PlayerID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static GameEvents CreateGameEvents(global::System.Int32 id, global::System.Int32 gameID, global::System.Int32 playerID, global::System.Int32 eventID, global::System.DateTime time)
        {
            GameEvents gameEvents = new GameEvents();
            gameEvents.Id = id;
            gameEvents.GameID = gameID;
            gameEvents.PlayerID = playerID;
            gameEvents.EventID = eventID;
            gameEvents.Time = time;
            return gameEvents;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameID
        {
            get
            {
                return _GameID;
            }
            set
            {
                OnGameIDChanging(value);
                ReportPropertyChanging("GameID");
                _GameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameID");
                OnGameIDChanged();
            }
        }
        private global::System.Int32 _GameID;
        partial void OnGameIDChanging(global::System.Int32 value);
        partial void OnGameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerID
        {
            get
            {
                return _PlayerID;
            }
            set
            {
                OnPlayerIDChanging(value);
                ReportPropertyChanging("PlayerID");
                _PlayerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerID");
                OnPlayerIDChanged();
            }
        }
        private global::System.Int32 _PlayerID;
        partial void OnPlayerIDChanging(global::System.Int32 value);
        partial void OnPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_GameEvents_Event", "Events")]
        public Events Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("fscModel.FK_GameEvents_Event", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("fscModel.FK_GameEvents_Event", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Events> EventsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("fscModel.FK_GameEvents_Event", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Events>("fscModel.FK_GameEvents_Event", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_GameEvents_Game", "Games")]
        public Games Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("fscModel.FK_GameEvents_Game", "Games").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("fscModel.FK_GameEvents_Game", "Games").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Games> GamesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("fscModel.FK_GameEvents_Game", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Games>("fscModel.FK_GameEvents_Game", "Games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_GameEvents_Players", "Players")]
        public Players Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("fscModel.FK_GameEvents_Players", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("fscModel.FK_GameEvents_Players", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Players> PlayersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("fscModel.FK_GameEvents_Players", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Players>("fscModel.FK_GameEvents_Players", "Players", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="Games")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Games : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Games object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="team1ID">Initial value of the Team1ID property.</param>
        /// <param name="team2ID">Initial value of the Team2ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="refereeID">Initial value of the RefereeID property.</param>
        public static Games CreateGames(global::System.Int32 id, global::System.Int32 team1ID, global::System.Int32 team2ID, global::System.Boolean type, global::System.Int32 refereeID)
        {
            Games games = new Games();
            games.Id = id;
            games.Team1ID = team1ID;
            games.Team2ID = team2ID;
            games.Type = type;
            games.RefereeID = refereeID;
            return games;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team1ID
        {
            get
            {
                return _Team1ID;
            }
            set
            {
                OnTeam1IDChanging(value);
                ReportPropertyChanging("Team1ID");
                _Team1ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team1ID");
                OnTeam1IDChanged();
            }
        }
        private global::System.Int32 _Team1ID;
        partial void OnTeam1IDChanging(global::System.Int32 value);
        partial void OnTeam1IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team2ID
        {
            get
            {
                return _Team2ID;
            }
            set
            {
                OnTeam2IDChanging(value);
                ReportPropertyChanging("Team2ID");
                _Team2ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team2ID");
                OnTeam2IDChanged();
            }
        }
        private global::System.Int32 _Team2ID;
        partial void OnTeam2IDChanging(global::System.Int32 value);
        partial void OnTeam2IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Stadium
        {
            get
            {
                return _Stadium;
            }
            set
            {
                OnStadiumChanging(value);
                ReportPropertyChanging("Stadium");
                _Stadium = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Stadium");
                OnStadiumChanged();
            }
        }
        private global::System.String _Stadium;
        partial void OnStadiumChanging(global::System.String value);
        partial void OnStadiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Boolean _Type;
        partial void OnTypeChanging(global::System.Boolean value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RefereeID
        {
            get
            {
                return _RefereeID;
            }
            set
            {
                OnRefereeIDChanging(value);
                ReportPropertyChanging("RefereeID");
                _RefereeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefereeID");
                OnRefereeIDChanged();
            }
        }
        private global::System.Int32 _RefereeID;
        partial void OnRefereeIDChanging(global::System.Int32 value);
        partial void OnRefereeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_GameEvents_Game", "GameEvents")]
        public EntityCollection<GameEvents> GameEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameEvents>("fscModel.FK_GameEvents_Game", "GameEvents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameEvents>("fscModel.FK_GameEvents_Game", "GameEvents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Games_Referee", "Referee")]
        public Referee Referee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Referee>("fscModel.FK_Games_Referee", "Referee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Referee>("fscModel.FK_Games_Referee", "Referee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Referee> RefereeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Referee>("fscModel.FK_Games_Referee", "Referee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Referee>("fscModel.FK_Games_Referee", "Referee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Games_Team1", "Teams")]
        public Teams Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_Games_Team1", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_Games_Team1", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teams> TeamsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_Games_Team1", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teams>("fscModel.FK_Games_Team1", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Games_Teams", "Teams")]
        public Teams Teams1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_Games_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_Games_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teams> Teams1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_Games_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teams>("fscModel.FK_Games_Teams", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="PlayerInTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerInTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerInTeam object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="playerID">Initial value of the PlayerID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        public static PlayerInTeam CreatePlayerInTeam(global::System.Int32 id, global::System.Int32 playerID, global::System.Int32 teamID)
        {
            PlayerInTeam playerInTeam = new PlayerInTeam();
            playerInTeam.Id = id;
            playerInTeam.PlayerID = playerID;
            playerInTeam.TeamID = teamID;
            return playerInTeam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerID
        {
            get
            {
                return _PlayerID;
            }
            set
            {
                OnPlayerIDChanging(value);
                ReportPropertyChanging("PlayerID");
                _PlayerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerID");
                OnPlayerIDChanged();
            }
        }
        private global::System.Int32 _PlayerID;
        partial void OnPlayerIDChanging(global::System.Int32 value);
        partial void OnPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_PlayerInTeam_Players", "Players")]
        public Players Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("fscModel.FK_PlayerInTeam_Players", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("fscModel.FK_PlayerInTeam_Players", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Players> PlayersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("fscModel.FK_PlayerInTeam_Players", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Players>("fscModel.FK_PlayerInTeam_Players", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_PlayerInTeam_Team", "Teams")]
        public Teams Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_PlayerInTeam_Team", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_PlayerInTeam_Team", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teams> TeamsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("fscModel.FK_PlayerInTeam_Team", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teams>("fscModel.FK_PlayerInTeam_Team", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="PlayerPositions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerPositions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerPositions object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static PlayerPositions CreatePlayerPositions(global::System.Int32 id, global::System.String position)
        {
            PlayerPositions playerPositions = new PlayerPositions();
            playerPositions.Id = id;
            playerPositions.Position = position;
            return playerPositions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Players_PlayerPositions", "Players")]
        public EntityCollection<Players> Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Players>("fscModel.FK_Players_PlayerPositions", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Players>("fscModel.FK_Players_PlayerPositions", "Players", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="Players")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Players : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Players object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="passport">Initial value of the Passport property.</param>
        /// <param name="isMain">Initial value of the IsMain property.</param>
        /// <param name="positionID">Initial value of the PositionID property.</param>
        public static Players CreatePlayers(global::System.Int32 id, global::System.String lastName, global::System.String name, global::System.String passport, global::System.Boolean isMain, global::System.Int32 positionID)
        {
            Players players = new Players();
            players.Id = id;
            players.LastName = lastName;
            players.Name = name;
            players.Passport = passport;
            players.IsMain = isMain;
            players.PositionID = positionID;
            return players;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Passport
        {
            get
            {
                return _Passport;
            }
            set
            {
                OnPassportChanging(value);
                ReportPropertyChanging("Passport");
                _Passport = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Passport");
                OnPassportChanged();
            }
        }
        private global::System.String _Passport;
        partial void OnPassportChanging(global::System.String value);
        partial void OnPassportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMain
        {
            get
            {
                return _IsMain;
            }
            set
            {
                OnIsMainChanging(value);
                ReportPropertyChanging("IsMain");
                _IsMain = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMain");
                OnIsMainChanged();
            }
        }
        private global::System.Boolean _IsMain;
        partial void OnIsMainChanging(global::System.Boolean value);
        partial void OnIsMainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionID
        {
            get
            {
                return _PositionID;
            }
            set
            {
                OnPositionIDChanging(value);
                ReportPropertyChanging("PositionID");
                _PositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionID");
                OnPositionIDChanged();
            }
        }
        private global::System.Int32 _PositionID;
        partial void OnPositionIDChanging(global::System.Int32 value);
        partial void OnPositionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_GameEvents_Players", "GameEvents")]
        public EntityCollection<GameEvents> GameEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameEvents>("fscModel.FK_GameEvents_Players", "GameEvents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameEvents>("fscModel.FK_GameEvents_Players", "GameEvents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_PlayerInTeam_Players", "PlayerInTeam")]
        public EntityCollection<PlayerInTeam> PlayerInTeam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerInTeam>("fscModel.FK_PlayerInTeam_Players", "PlayerInTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerInTeam>("fscModel.FK_PlayerInTeam_Players", "PlayerInTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Players_PlayerPositions", "PlayerPositions")]
        public PlayerPositions PlayerPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayerPositions>("fscModel.FK_Players_PlayerPositions", "PlayerPositions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayerPositions>("fscModel.FK_Players_PlayerPositions", "PlayerPositions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PlayerPositions> PlayerPositionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayerPositions>("fscModel.FK_Players_PlayerPositions", "PlayerPositions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PlayerPositions>("fscModel.FK_Players_PlayerPositions", "PlayerPositions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="Referee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Referee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Referee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Referee CreateReferee(global::System.Int32 id, global::System.String lastName, global::System.String name)
        {
            Referee referee = new Referee();
            referee.Id = id;
            referee.LastName = lastName;
            referee.Name = name;
            return referee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Qualify
        {
            get
            {
                return _Qualify;
            }
            set
            {
                OnQualifyChanging(value);
                ReportPropertyChanging("Qualify");
                _Qualify = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Qualify");
                OnQualifyChanged();
            }
        }
        private global::System.String _Qualify;
        partial void OnQualifyChanging(global::System.String value);
        partial void OnQualifyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Games_Referee", "Games")]
        public EntityCollection<Games> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Games>("fscModel.FK_Games_Referee", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Games>("fscModel.FK_Games_Referee", "Games", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fscModel", Name="Teams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Teams object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="coachID">Initial value of the CoachID property.</param>
        public static Teams CreateTeams(global::System.Int32 id, global::System.String name, global::System.Int32 coachID)
        {
            Teams teams = new Teams();
            teams.Id = id;
            teams.Name = name;
            teams.CoachID = coachID;
            return teams;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoachID
        {
            get
            {
                return _CoachID;
            }
            set
            {
                OnCoachIDChanging(value);
                ReportPropertyChanging("CoachID");
                _CoachID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoachID");
                OnCoachIDChanged();
            }
        }
        private global::System.Int32 _CoachID;
        partial void OnCoachIDChanging(global::System.Int32 value);
        partial void OnCoachIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Teams_Coaches", "Coaches")]
        public Coaches Coaches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coaches>("fscModel.FK_Teams_Coaches", "Coaches").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coaches>("fscModel.FK_Teams_Coaches", "Coaches").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coaches> CoachesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coaches>("fscModel.FK_Teams_Coaches", "Coaches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coaches>("fscModel.FK_Teams_Coaches", "Coaches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Games_Team1", "Games")]
        public EntityCollection<Games> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Games>("fscModel.FK_Games_Team1", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Games>("fscModel.FK_Games_Team1", "Games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_Games_Teams", "Games")]
        public EntityCollection<Games> Games1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Games>("fscModel.FK_Games_Teams", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Games>("fscModel.FK_Games_Teams", "Games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fscModel", "FK_PlayerInTeam_Team", "PlayerInTeam")]
        public EntityCollection<PlayerInTeam> PlayerInTeam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerInTeam>("fscModel.FK_PlayerInTeam_Team", "PlayerInTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerInTeam>("fscModel.FK_PlayerInTeam_Team", "PlayerInTeam", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
